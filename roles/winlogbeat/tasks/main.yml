---
- name: check if winlogbeat service is installed
  win_service:
    name: winlogbeat
  register: service_info

- name: remove existing winlogbeat service
  win_service:
    name: "{{ winlogbeat_servicename }}"
    state: absent
  when: service_info['exists'] == true

- name: check if winlogbeat directory exists
  win_stat:
    path: "{{ winlogbeat_base_dir }}"
  register: base_dir

- name: remove existing winlogbeat files
  win_file:
    path: "{{ winlogbeat_base_dir }}"
    state: absent
  when: base_dir.stat.exists == true

- name: get winlogbeat installation file
  win_get_url:
    url: "{{ winlogbeat_zip_url }}"
    dest: "{{ winlogbeat_root_dir }}"

- name: unzip the installation file
  win_unzip:
    src: "{{ winlogbeat_root_dir }}{{ winlogbeat_file_name }}{{ winlogbeat_file_ext }}"
    dest: "{{ winlogbeat_root_dir }}"
  notify: remove the zip file

- name: copy installation files to winlogbeat dir
  win_copy:
    src: "{{ winlogbeat_root_dir }}{{ winlogbeat_file_name }}\\"
    dest: "{{ winlogbeat_base_dir }}"
    remote_src: yes
  notify: remove winlogbeat extracted dir

- name: install winlogbeat service
  win_shell: ./install-service-winlogbeat.ps1 
  args:
    chdir: "{{ winlogbeat_base_dir }}"

- name: create logs dir
  win_file:
    path: "{{ winlogbeat_logs_dir }}"
    state: directory

- name: set winlogbeat service startup type automatic
  win_shell: Set-Service -Name {{ winlogbeat_servicename }} -StartupType Automatic
  register: startup_info

- name: copy winlogbeat configuration
  win_template:
    src: winlogbeat.yml.j2
    dest: "{{ winlogbeat_base_dir }}\\winlogbeat.yml"
  notify: restart winlogbeat

